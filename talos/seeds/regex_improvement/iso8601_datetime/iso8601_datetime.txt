Generation:
0

Phenotype:
^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$

Genotype:
[2, 12, 3, 4, 56, 3, 4, 54, 3, 5, 5, 29, 3, 4, 59, 3, 5, 3, 14, 3, 4, 42, 3, 4, 60, 2, 4, 43, 2, 10, 3, 12, 3, 5, 3, 10, 2, 5, 3, 11, 2, 12, 3, 4, 54, 3, 5, 5, 29, 2, 4, 43, 2, 10, 3, 13, 5, 3, 10, 3, 13, 2, 12, 3, 4, 54, 3, 5, 5, 29, 2, 5, 4, 45, 2, 10, 3, 13, 5, 3, 10, 3, 12, 2, 12, 3, 4, 54, 3, 5, 5, 29, 2, 4, 46, 2, 10, 3, 13, 5, 3, 10, 3, 15, 2, 12, 3, 4, 54, 3, 5, 5, 29, 2, 4, 46, 2, 10, 3, 13, 5, 3, 10, 3, 15, 2, 14, 9, 3, 12, 3, 4, 54, 3, 5, 5, 29, 2, 4, 54, 2, 14, 11, 3, 17, 2, 19, 10, 2, 10, 3, 12, 3, 4, 41, 2, 4, 43, 2, 10, 3, 13, 5, 3, 10, 3, 12, 2, 12, 3, 4, 54, 3, 5, 5, 29, 2, 4, 46, 2, 10, 3, 13, 5, 3, 10, 3, 15, 3, 12, 3, 4, 54, 3, 5, 5, 29, 3, 4, 62, 2, 5, 4, 51, 3, 15, 4, 35]
Tree:
(<RE> (<elementary-RE> (<set> (<char> (<s_char> ^)) (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> {)) (<set> (<char> (<an_char> (<0_9> 4))) (<set> (<char> (<s_char> ,)) (<set> (<char> (<s_char> })) (<set> (<char> (<s_char> -))))))))))) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<set> (<char> (<an_char> (<0_9> 0))) (<set> (<char> (<an_char> (<0_9> 1))))))) ]) (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> -)))))) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<range> (<an_char> (<0_9> 0)) - (<an_char> (<0_9> 3))))) ]) (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<an_char> (<A_Z> T))))))) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<range> (<an_char> (<0_9> 0)) - (<an_char> (<0_9> 2))))) ]) (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> :)))))) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<range> (<an_char> (<0_9> 0)) - (<an_char> (<0_9> 5))))) ]) (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> :)))))) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<range> (<an_char> (<0_9> 0)) - (<an_char> (<0_9> 5))))) ]) (<RE> (<elementary-RE> (<modifier> (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> \))))))) .)) (<RE> (<elementary-RE> (<modifier> (<RE> (<elementary-RE> \d)) +)) (<RE> (<elementary-RE> (<lookarounds> (?: (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<set> (<char> (<s_char> +)) (<set> (<char> (<s_char> -)))))) ]) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<range> (<an_char> (<0_9> 0)) - (<an_char> (<0_9> 2))))) ]) (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> :)))))) (<RE> (<elementary-RE> [ (<RE> (<elementary-RE> (<range> (<an_char> (<0_9> 0)) - (<an_char> (<0_9> 5))))) ]) (<RE> (<elementary-RE> (<set> (<char> (<s_char> \)) (<set> (<char> (<an_char> (<a_z> d))) (<set> (<char> (<s_char> |)) (<set> (<char> (<an_char> (<A_Z> Z))))))))))))) ))) (<RE> (<elementary-RE> (<char> (<s_char> $)))))))))))))))))

Fitness:
0.0007238340331241488
